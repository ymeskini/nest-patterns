/* eslint-disable */
export default async () => {
    const t = {
        ["./coffees/entities/coffee.entity"]: await import("./coffees/entities/coffee.entity"),
        ["./coffees/entities/flavor.entity"]: await import("./coffees/entities/flavor.entity"),
        ["./users/enums/role.enum"]: await import("./users/enums/role.enum"),
        ["./alarms/domain/alarm"]: await import("./alarms/domain/alarm")
    };
    return { "@nestjs/swagger": { "models": [[import("./coffees/entities/flavor.entity"), { "Flavor": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, coffees: { required: true, type: () => [t["./coffees/entities/coffee.entity"].Coffee] } } }], [import("./coffees/entities/coffee.entity"), { "Coffee": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, brand: { required: true, type: () => String }, recommendations: { required: true, type: () => Number }, flavors: { required: true, type: () => [t["./coffees/entities/flavor.entity"].Flavor] } } }], [import("./coffees/dto/create-coffee.dto"), { "CreateCoffeeDto": { name: { required: true, type: () => String }, brand: { required: true, type: () => String }, flavors: { required: true, type: () => [String] } } }], [import("./coffees/dto/update-coffee.dto"), { "UpdateCoffeeDto": {} }], [import("./common/dto/pagination-query.dto"), { "PaginationQueryDto": { limit: { required: true, type: () => Number, minimum: 1 }, offset: { required: true, type: () => Number, minimum: 1 } } }], [import("./events/entities/event.entity"), { "Event": { id: { required: true, type: () => Number }, type: { required: true, type: () => String }, name: { required: true, type: () => String }, payload: { required: true, type: () => Object } } }], [import("./alarms/presenters/http/dto/create-alarm.dto"), { "CreateAlarmDto": { name: { required: true, type: () => String }, severity: { required: true, type: () => String } } }], [import("./alarms/infrastructure/persistence/in-memory/entities/alarm.entity"), { "AlarmEntity": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, severity: { required: true, type: () => String } } }], [import("./alarms/infrastructure/persistence/orm/entities/alarm.entity"), { "AlarmEntity": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, severity: { required: true, type: () => String } } }], [import("./users/dto/create-user.dto"), { "CreateUserDto": {} }], [import("./users/dto/update-user.dto"), { "UpdateUserDto": {} }], [import("./users/entities/user.entity"), { "User": { id: { required: true, type: () => Number }, email: { required: true, type: () => String }, password: { required: true, type: () => String }, role: { required: true, enum: t["./users/enums/role.enum"].Role }, permissions: { required: true, type: () => [Object] } } }], [import("./iam/authentication/dto/sign-up.dto"), { "SignUpDto": { email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String, minLength: 10 } } }], [import("./iam/authentication/dto/refresh-token.dto"), { "RefreshTokenDto": { refreshToken: { required: true, type: () => String } } }], [import("./iam/authentication/dto/sign-in.dto"), { "SignInDto": { email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String, minLength: 10 } } }], [import("./alarms/presenters/http/dto/update-alarm.dto"), { "UpdateAlarmDto": {} }]], "controllers": [[import("./coffees/coffees.controller"), { "CoffeesController": { "findAll": { type: [t["./coffees/entities/coffee.entity"].Coffee] }, "findOne": { type: t["./coffees/entities/coffee.entity"].Coffee }, "create": { type: t["./coffees/entities/coffee.entity"].Coffee }, "update": { type: t["./coffees/entities/coffee.entity"].Coffee }, "remove": { type: t["./coffees/entities/coffee.entity"].Coffee } } }], [import("./alarms/presenters/http/alarms.controller"), { "AlarmsController": { "create": { type: t["./alarms/domain/alarm"].Alarm }, "findAll": { type: [t["./alarms/domain/alarm"].Alarm] } } }], [import("./users/users.controller"), { "UsersController": { "create": { type: String }, "findAll": { type: String }, "findOne": { type: String }, "update": { type: String }, "remove": { type: String } } }], [import("./iam/authentication/authentication.controller"), { "AuthenticationController": { "signUp": {}, "signIn": {}, "refreshTokens": {} } }]] } };
};